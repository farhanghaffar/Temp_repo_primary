name: Trigger Secondary Repo Pipeline

on:
  pull_request:
    types: [opened]

jobs:
  trigger_secondary_repo:
    runs-on: ubuntu-latest

    steps:
    - name: Trigger Secondary Repo Pipeline
      run: |
        const { exec } = require('@actions/exec');
        const { github } = require('@actions/core');

        const { data: pullRequest } = await github.pulls.get({
          owner: process.env.GITHUB_REPOSITORY.split('/')[0],
          repo: process.env.GITHUB_REPOSITORY.split('/')[1],
          pull_number: process.env.GITHUB_EVENT_NUMBER
        });

        const secondaryRepoOwner = "farhanghaffar";
        const secondaryRepoName = "temp_repo_secondary";
        const workflowId = "deploy";
        const mainBranch = "main";

        let workflowRuns = '';
        await exec(`curl -X GET -u farhanghaffar:${process.env.GITHUB_PAT} "https://api.github.com/repos/${secondaryRepoOwner}/${secondaryRepoName}/actions/runs?status=queued"`, [], {
          listeners: {
            stdout: (data) => { workflowRuns += data.toString(); }
          }
        });

        workflowRuns = JSON.parse(workflowRuns);
        if (workflowRuns.total_count === 0) {
          await exec(`curl -X POST -u farhanghaffar:${process.env.GITHUB_PAT} "https://api.github.com/repos/${secondaryRepoOwner}/${secondaryRepoName}/actions/workflows/${workflowId}/dispatches" -d '{"ref":"${mainBranch}","inputs":{"pull_request_number":${pullRequest.number}}}'`);
        }
      env:
        GITHUB_PAT: ${{ secrets.GITHUB_PAT }}
